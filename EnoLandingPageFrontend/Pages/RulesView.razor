@page "/rules"

@using EnoLandingPageFrontend.Services
@using EnoLandingPageCore.Messages
@using System.Globalization
@inject EnoLandingPageService DataService

<h1>Rules</h1>
<hr />
<div>
    <h2>Summary</h2>
    <ul>
        <li>
            BambiCTF is an educational attack/defense CTF for beginners. Vulnboxes and VPN servers are provided by us, you will find all information you need in your <a href="/profile">profile</a>.
        </li>
        <li>
            The game will start on @ctfInfo?.StartTime.ToString(CultureInfo.InvariantCulture).
        </li>
        <li>
            You must register before @ctfInfo?.StartTime.AddHours(-ctfInfo.RegistrationCloseHours).ToString(CultureInfo.InvariantCulture) <b>and</b> check in before @ctfInfo?.StartTime.AddHours(-1).ToString(CultureInfo.InvariantCulture).
        </li>
        <li>
            A round lasts 60 seconds, flags are valid for several rounds.
        </li>
        <li>
            Flag format: <code>ENO.{48}</code>
        </li>
        <li>
            Flag submission: <code>nc flags.bambi.ovh</code>
        </li>
        <li>
            You will find an <a href="https://github.com/arkime/arkime" target="_blank">Arkime</a> installation on your vulnbox. Arkime is a traffic analysis tool, not a vulnerable service.
        </li>
    </ul>

    <h2>Scoring</h2>
    <p>We are currently using the scoring formula by <a href="https://2019.faustctf.net/information/rules/">Faust CTF</a>.</p>

    <h2>Social Conduct</h2>
    <p>The vulnerable services of your opponents are your only valid targets. Do not engage anything else!</p>
    <p>Do not attempt to exhaust resources on your opponents' vulnboxes, for example by sending excessive amounts of requests or exploiting vulnerabilities leading to a denial of service.</p>
</div>

@code {
    private CtfInfoMessage? ctfInfo;

    protected override async Task OnInitializedAsync()
    {
        ctfInfo = await DataService.GetCtfInfo();
    }
}
