@page "/profile"

@using EnoLandingPageFrontend.Services
@using EnoLandingPageCore.Messages
@inject EnoLandingPageService DataService


@if (teamInformation != null && ctfInfo != null)
{
    <h1>@(teamInformation.TeamName)</h1>
    @if (!teamInformation.Confirmed)
    {
        <div class="alert alert-danger" role="alert">
            Your participation hasn't been confirmed yet!
        </div>
        @if (ctfInfo.StartTime.AddHours(-ctfInfo.RegistrationCloseHours) > DateTime.UtcNow)
        {
            <p>Please check in once the registration closes at @(ctfInfo.StartTime.AddHours(-ctfInfo.RegistrationCloseHours).ToString())</p>
        }
        else
        {
            <button @onclick="CheckIn">Check In!</button>
        }
    }
    else
    {
        <div class="alert alert-success" role="alert">
            Your participation has been confirmed!
        </div>
        <button @onclick="StartVm">Start VM</button>
    }
    <div>
        <div>External IP Address:</div>
        <code>@(teamInformation.ExternalIpAddress ?? "t.b.d.")</code>
    </div>
    <div>
        <div>Root Password:</div>
        <code>@(teamInformation.RootPassword ?? "t.b.d.")</code>
    </div>
    <div>
        <div>Internal IP Address:</div>
        <code>@(teamInformation.InternalIpAddress ?? "t.b.d.")</code>
    </div>
    <div>
        <div>Vulnbox Status:</div>
        <code>@teamInformation.VulnboxStatus</code>
    </div>
    <div>
        <div>Vpn Configuration:</div>
        <code>@(teamInformation.VpnConfig ?? "t.b.d.")</code>
    </div>
}

@code {
    private TeamDetailsMessage? teamInformation;
    private CtfInfoMessage? ctfInfo;

    protected override async Task OnInitializedAsync()
    {
        teamInformation = await DataService.GetTeamInfo();
        ctfInfo = await DataService.GetCtfInfo();
    }

    protected async Task CheckIn(MouseEventArgs e)
    {
        await DataService.CheckIn();
        teamInformation = await DataService.GetTeamInfo();
    }

    protected async Task StartVm(MouseEventArgs e)
    {
        await DataService.StartVm();
        teamInformation = await DataService.GetTeamInfo();
    }
}
