// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '~@angular/material' as mat;
@use '~@pebula/ngrid' as ngrid;
// Plus imports for other components in your app.

// $custom-typography: mat-typography-config(
//   $font-family: 'Roboto, "Helvetica Neue", sans-serif',
//   $display-4: mat-typography-level(112px, 112px, 300),
//   $display-3: mat-typography-level(56px, 56px, 400),
//   $display-2: mat-typography-level(45px, 48px, 400),
//   $display-1: mat-typography-level(34px, 40px, 400),
//   $headline: mat-typography-level(24px, 32px, 400),
//   $title: mat-typography-level(20px, 32px, 500),
//   $subheading-2: mat-typography-level(16px, 28px, 400),
//   $subheading-1: mat-typography-level(15px, 24px, 400),
//   $body-2: mat-typography-level(14px, 24px, 500),
//   $body-1: mat-typography-level(14px, 20px, 400),
//   $caption: mat-typography-level(12px, 20px, 400),
//   $button: mat-typography-level(14px, 14px, 500),
//   $input: mat-typography-level(inherit, 1.125, 400),
// );

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
// Make your own: http://mcg.mbitson.com/#!?mcgpalette0=%233f51b5

$our-own-palette-primary: (
  50: #e8eaf6,
  100: #c5cbe9,
  200: #9fa8da,
  300: #7985cb,
  400: #5c6bc0,
  500: #3f51b5,
  600: #394aae,
  700: #3140a5,
  800: #29379d,
  900: #1b278d,
  A100: #c6cbff,
  A200: #939dff,
  A400: #606eff,
  A700: #4757ff,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #ffffff,
    500: #ffffff,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
    A100: #000000,
    A200: #000000,
    A400: #ffffff,
    A700: #ffffff,
  ),
);

$our-own-palette-secondary: (
  50: #e8eaf6,
  100: #c5cbe9,
  200: #9fa8da,
  300: #7985cb,
  400: #5c6bc0,
  500: #3f51b5,
  600: #394aae,
  700: #3140a5,
  800: #29379d,
  900: #1b278d,
  A100: #c6cbff,
  A200: #939dff,
  A400: #606eff,
  A700: #4757ff,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #ffffff,
    500: #ffffff,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
    A100: #000000,
    A200: #000000,
    A400: #ffffff,
    A700: #ffffff,
  ),
);

$ClientApp-primary: mat.define-palette($our-own-palette-primary);
$ClientApp-accent: mat.define-palette($our-own-palette-secondary);

// The warn palette is optional (defaults to red).
$ClientApp-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$default-light: mat.define-light-theme(
  (
    color: (
      primary: $ClientApp-primary,
      accent: $ClientApp-accent,
      warn: $ClientApp-warn,
    ),
  )
);

$default-dark: mat.define-dark-theme(
  (
    color: (
      primary: $ClientApp-primary,
      accent: $ClientApp-accent,
      warn: $ClientApp-warn,
    ),
  )
);

$pbl-ngrid-dark-theme: ngrid.define-dark-theme($default-light);
$pbl-ngrid-light-theme: ngrid.define-light-theme($default-dark);
@include ngrid.ngrid-typography();

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($default-light);

.default_light_theme {
  @include mat.all-component-colors($default-light);
  @include ngrid.ngrid-theme($pbl-ngrid-light-theme);

  a {
    color: mat.get-color-from-palette($ClientApp-accent, 700) !important;
  }
}

.default_dark_theme {
  @include mat.all-component-colors($default-dark);
  @include ngrid.ngrid-theme($pbl-ngrid-dark-theme);
  $color-config: mat.get-color-config($default-dark);

  a {
    color: mat.get-color-from-palette($ClientApp-accent, 200) !important;
  }
}

html,
body,
app-root {
  display: flex;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
}

.page-expand {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
}

.pb-spacer {
  flex: 1;
  flex-grow: 1;
}

.pbl-ngrid-row {
  min-height: 70px !important;
}

.pbl-ngrid-header-row-main {
  min-height: 90px !important;
}

.flagstore-cell {
  margin-top: 2px;
  align-self: start;
}

.team-cell-highlight {
  background-color: cornflowerblue;
}

.OK {
  background-color: #9ccc65;
}

.MUMBLE {
  background-color: #fdd835;
}

.INTERNAL_ERROR {
}

.RECOVERING {
  background-color: #29b6f6;
}

.OFFLINE {
  background-color: #ef5350;
}

.pbl-ngrid-column-type-service {
  &.MUMBLE,
  &.RECOVERING,
  &.OFFLINE {
    cursor: pointer;
    transition: all 0.2s;

    &:hover {
      position: relative;
      box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.3);
      border-radius: 3px;
      transform: scale(1.05);
      z-index: 9999;
    }
  }
}

$small-breakpoint: 468px;
$med-breakpoint: 768px;
$big-breakpoint: 1024px;

@mixin smaller {
  @media (max-width: #{$small-breakpoint - 1px}) {
    @content;
  }
}

@mixin small-med {
  @media (min-width: #{$small-breakpoint}) and (max-width: #{$med-breakpoint - 1px}) {
    @content;
  }
}

@mixin med-big {
  @media (min-width: #{$med-breakpoint}) and (max-width: #{$big-breakpoint}) {
    @content;
  }
}

@mixin bigger {
  @media (min-width: #{$big-breakpoint}) {
    @content;
  }
}

@mixin below-small {
  @media (max-width: #{$small-breakpoint - 1px}) {
    @content;
  }
}

@mixin below-med {
  @media (max-width: #{$med-breakpoint - 1px}) {
    @content;
  }
}

@mixin below-big {
  @media (max-width: #{$big-breakpoint - 1px}) {
    @content;
  }
}

@mixin on-med-and-up {
  @media (min-width: #{$med-breakpoint}) {
    @content;
  }
}

//Media query classes
@include on-med-and-up {
  .pb-hide-on-med-and-up {
    display: none;
  }
}

@include below-small {
  .pb-hide-below-small {
    display: none;
  }
}

@include below-med {
  .pb-hide-below-med {
    display: none;
  }
}

@include below-big {
  .pb-hide-below-big {
    display: none;
  }
}

/**
* Overwrites
*/
button.mat-button .mat-icon,
a.mat-button .mat-icon,
a.mat-raised-button .mat-icon,
a.mat-flat-button .mat-icon,
a.mat-stroked-button .mat-icon {
  vertical-align: top;
  font-size: 1.25em;
}
